[
  {
    "objectID": "reading_files.html",
    "href": "reading_files.html",
    "title": "Reading dvw files",
    "section": "",
    "text": "The data project scouting software, data volley 4, files are the focus on this package. If your interested in some example files, you can find them here."
  },
  {
    "objectID": "reading_files.html#dvw-files",
    "href": "reading_files.html#dvw-files",
    "title": "Reading dvw files",
    "section": "",
    "text": "The data project scouting software, data volley 4, files are the focus on this package. If your interested in some example files, you can find them here."
  },
  {
    "objectID": "reading_files.html#reading-a-single-dvw",
    "href": "reading_files.html#reading-a-single-dvw",
    "title": "Reading dvw files",
    "section": "Reading a single dvw",
    "text": "Reading a single dvw\nThe provided example file is used. You would typically fill in the None with the actual path of your dvw files.\n\n\nCode\nimport pandas as pd\nfrom datavolley import read_dv\npd.set_option('display.max_columns', None) # Used so we can see the entire dataframe as it prints\npd.set_option('display.width', 300)\ndv_instance = read_dv.DataVolley(None) # Replace `None` with path of your dvw file \ndf = dv_instance.get_plays()\nprint(df[(df['skill'].notna()) & (df['skill'] != \"Point\")].head(10))\n\n\n                                match_id video_file_number video_time                code                      team player_number      player_name player_id      skill evaluation_code setter_position attack_code set_code set_type start_zone end_zone end_subzone num_players_numeric  \\\n4   3e34bb91-095b-495d-8204-29d4502486a0                 1        494   *19SM+~~~78A~~~00  University of Louisville            19  Shannon Shields   -296094      Serve               +               1         NaN      NaN      NaN          7        8           A                 NaN   \n5   3e34bb91-095b-495d-8204-29d4502486a0                 1        495  a02RM-~~~58AM~~00B      University of Dayton             2    Maura Collins   -230138  Reception               -               6         NaN      NaN      NaN          5        8           A                 NaN   \n6   3e34bb91-095b-495d-8204-29d4502486a0                 1        497   a08ET#~~~~8C~~~00      University of Dayton             8  Brooke Westbeld   -232525        Set               #               6         NaN      NaN        ~        NaN        8           C                 NaN   \n7   3e34bb91-095b-495d-8204-29d4502486a0                 1        499  a10AT-X5~46CH2~00F      University of Dayton            10   Jamie Peterson    -11802     Attack               -               6          X5      NaN      NaN          4        6           C                   2   \n8   3e34bb91-095b-495d-8204-29d4502486a0                 1        499   *11BT+~~~~2C~~~00  University of Louisville            11   Anna Stevenson   -278838      Block               +               1         NaN      NaN      NaN        NaN        2           C                 NaN   \n9   3e34bb91-095b-495d-8204-29d4502486a0                 1        500  *19DT+~~~42AB~~00B  University of Louisville            19  Shannon Shields   -296094        Dig               +               1         NaN      NaN      NaN          4        2           A                 NaN   \n10  3e34bb91-095b-495d-8204-29d4502486a0                 1        502   *08EH#~~~~8A~~~00  University of Louisville             8    Lexi Hamilton    -75970        Set               #               1         NaN      NaN        ~        NaN        8           A                 NaN   \n11  3e34bb91-095b-495d-8204-29d4502486a0                 1        504  *09AH#V5~41BH2~00F  University of Louisville             9  Claire Chaussee   -225496     Attack               #               1          V5      NaN      NaN          4        1           B                   2   \n12  3e34bb91-095b-495d-8204-29d4502486a0                 1        504   a17BH=~~~~2B~~~00      University of Dayton            17       Sierra Pla    -11804      Block               =               6         NaN      NaN      NaN        NaN        2           B                 NaN   \n18  3e34bb91-095b-495d-8204-29d4502486a0                 1        519   *19SM#~~~71C~~~+1  University of Louisville            19  Shannon Shields   -296094      Serve               #               1         NaN      NaN      NaN          7        1           C                 NaN   \n\n    home_team_score  visiting_team_score home_setter_position visiting_setter_position custom_code home_p1 home_p2 home_p3 home_p4 home_p5 home_p6 visiting_p1 visiting_p2 visiting_p3 visiting_p4 visiting_p5 visiting_p6  start_coordinate  mid_coordinate  end_coordinate point_phase   attack_phase  \\\n4                 1                    0                    1                        6          00      19       9      11      15      10       7           1          16          17          10           6           8               431            &lt;NA&gt;            7642       Serve            nan   \n5                 1                    0                    1                        6         00B      19       9      11      15      10       7           1          16          17          10           6           8               431            &lt;NA&gt;            7642   Reception            nan   \n6                 1                    0                    1                        6          00      19       9      11      15      10       7           1          16          17          10           6           8              3147            &lt;NA&gt;            &lt;NA&gt;   Reception            nan   \n7                 1                    0                    1                        6         00F      19       9      11      15      10       7           1          16          17          10           6           8              4512            5522            8150   Reception      Reception   \n8                 1                    0                    1                        6          00      19       9      11      15      10       7           1          16          17          10           6           8              4578            &lt;NA&gt;            &lt;NA&gt;       Serve            nan   \n9                 1                    0                    1                        6         00B      19       9      11      15      10       7           1          16          17          10           6           8              4512            5522            5912       Serve            nan   \n10                1                    0                    1                        6          00      19       9      11      15      10       7           1          16          17          10           6           8              2859            &lt;NA&gt;            &lt;NA&gt;       Serve            nan   \n11                1                    0                    1                        6         00F      19       9      11      15      10       7           1          16          17          10           6           8              4316            5517            7918       Serve  BP-Transition   \n12                1                    0                    1                        6          00      19       9      11      15      10       7           1          16          17          10           6           8              4583            &lt;NA&gt;            &lt;NA&gt;   Reception            nan   \n18                2                    0                    1                        6          +1      19       9      11      15      10       7           1          16          17          10           6           8               529            &lt;NA&gt;            7728       Serve            nan   \n\n   start_coordinate_x start_coordinate_y mid_coordinate_x mid_coordinate_y end_coordinate_x end_coordinate_y set_number                 home_team         visiting_team home_team_id visiting_team_id              point_won_by              serving_team        receiving_team  rally_number  \\\n4             1.26875           0.092596             &lt;NA&gt;             &lt;NA&gt;          1.68125         5.425924          1  University of Louisville  University of Dayton           17               42  University of Louisville  University of Louisville  University of Dayton             1   \n5             1.26875           0.092596             &lt;NA&gt;             &lt;NA&gt;          1.68125         5.425924          1  University of Louisville  University of Dayton           17               42  University of Louisville  University of Louisville  University of Dayton             1   \n6             1.86875           2.092594             &lt;NA&gt;             &lt;NA&gt;             &lt;NA&gt;             &lt;NA&gt;          1  University of Louisville  University of Dayton           17               42  University of Louisville  University of Louisville  University of Dayton             1   \n7             0.55625            3.12963          0.93125          3.87037          1.98125         5.796294          1  University of Louisville  University of Dayton           17               42  University of Louisville  University of Louisville  University of Dayton             1   \n8             3.03125            3.12963             &lt;NA&gt;             &lt;NA&gt;             &lt;NA&gt;             &lt;NA&gt;          1  University of Louisville  University of Dayton           17               42  University of Louisville  University of Louisville  University of Dayton             1   \n9             0.55625            3.12963          0.93125          3.87037          0.55625         4.166666          1  University of Louisville  University of Dayton           17               42  University of Louisville  University of Louisville  University of Dayton             1   \n10            2.31875           1.870372             &lt;NA&gt;             &lt;NA&gt;             &lt;NA&gt;             &lt;NA&gt;          1  University of Louisville  University of Dayton           17               42  University of Louisville  University of Louisville  University of Dayton             1   \n11            0.70625           2.981482          0.74375          3.87037          0.78125         5.648146          1  University of Louisville  University of Dayton           17               42  University of Louisville  University of Louisville  University of Dayton             1   \n12            3.21875            3.12963             &lt;NA&gt;             &lt;NA&gt;             &lt;NA&gt;             &lt;NA&gt;          1  University of Louisville  University of Dayton           17               42  University of Louisville  University of Louisville  University of Dayton             1   \n18            1.19375            0.16667             &lt;NA&gt;             &lt;NA&gt;          1.15625         5.499998          1  University of Louisville  University of Dayton           17               42  University of Louisville  University of Louisville  University of Dayton             2   \n\n    possesion_number  \n4                  0  \n5                  1  \n6                  1  \n7                  1  \n8                  2  \n9                  2  \n10                 2  \n11                 2  \n12                 3  \n18                 0"
  },
  {
    "objectID": "reading_files.html#reading-multiple-dvw-files",
    "href": "reading_files.html#reading-multiple-dvw-files",
    "title": "Reading dvw files",
    "section": "Reading multiple dvw files",
    "text": "Reading multiple dvw files\nThere are different methods when reading more than one dvw file. If you have more than 200 files you may consider using threading.\nHere is one method to reading multiple files from a folder.\n\n\nCode\nimport pandas as pd\nfrom datavolley import read_dv\nimport os\n\n# Assign path\ndvw_path_folder = os.path.expanduser(\"~\\\\desktop\\\\dvws\")\nfile_extension = \".dvw\"\n\n# Get a list of all files with the specified extension in the directory\nfile_list = [f for f in os.listdir(dvw_path_folder) if f.endswith(file_extension)]\n\n# Initialize an empty DataFrame to store combined data\ncombined_df = pd.DataFrame()\n\ndef process_file(path):\n    dv_instance = read_dv.DataVolley(os.path.join(dvw_path_folder, path))\n    df = dv_instance.get_plays()\n    return df\n\n# Loop through each file path\nfor file_name in file_list:\n    combined_df = pd.concat([combined_df, process_file(file_name)], ignore_index=True)\n\nprint(\"DVW files read: \" + str(len(combined_df['match_id'].unique())))\n\nprint(combined_df[(combined_df['skill'].notna()) & (combined_df['skill'] != \"Point\")].head(10))\n\n\nDVW files read: 4\n                                match_id video_file_number video_time                code                             team player_number           player_name player_id      skill evaluation_code setter_position attack_code set_code set_type start_zone end_zone end_subzone num_players_numeric  \\\n4   58c37513-f115-4227-8d33-573172a4042e                 1        553   *07SM+~~~15B~~~00            University of Arizona             7             Ana Heath   -392644      Serve               +               1         NaN      NaN      NaN          1        5           B                 NaN   \n5   58c37513-f115-4227-8d33-573172a4042e                 1        554  a17RM-~~~15BW~~00B  University of California, Davis            17            Megan Lenn   -318259  Reception               -               1         NaN      NaN      NaN          1        5           B                 NaN   \n6   58c37513-f115-4227-8d33-573172a4042e                 1        556   a02EH#~~~~7B~~~00  University of California, Davis             2           Casi Newman   -318257        Set               #               1         NaN      NaN        ~        NaN        7           B                 NaN   \n7   58c37513-f115-4227-8d33-573172a4042e                 1        557  a09AH+V5~41BH2~00F  University of California, Davis             9         Amara Aimufua   -318258     Attack               +               1          V5      NaN      NaN          4        1           B                   2   \n8   58c37513-f115-4227-8d33-573172a4042e                 1        558   *02BH/~~~~2B~~~00            University of Arizona             2  Sofia Maldonado Diaz   -312203      Block               /               1         NaN      NaN      NaN        NaN        2           B                 NaN   \n9   58c37513-f115-4227-8d33-573172a4042e                 1        558  a09DH+~~~44CC~~00F  University of California, Davis             9         Amara Aimufua   -318258        Dig               +               1         NaN      NaN      NaN          4        4           C                 NaN   \n10  58c37513-f115-4227-8d33-573172a4042e                 1        559   a07EH#~~~~3D~~~00  University of California, Davis             7              Julia Ng   -336145        Set               #               1         NaN      NaN        ~        NaN        3           D                 NaN   \n11  58c37513-f115-4227-8d33-573172a4042e                 1        561  a03AH-V6~25BH2~00F  University of California, Davis             3      Olivia Utterback   -318256     Attack               -               1          V6      NaN      NaN          2        5           B                   2   \n12  58c37513-f115-4227-8d33-573172a4042e                 1        561   *22BH+~~~~4C~~~00            University of Arizona            22         Nicole Briggs   -334503      Block               +               1         NaN      NaN      NaN        NaN        4           C                 NaN   \n13  58c37513-f115-4227-8d33-573172a4042e                 1        562  *05DH#~~~26BB~~00B            University of Arizona             5         Jordan Wilson   -434959        Dig               #               1         NaN      NaN      NaN          2        6           B                 NaN   \n\n    home_team_score  visiting_team_score home_setter_position visiting_setter_position custom_code home_p1 home_p2 home_p3 home_p4 home_p5 home_p6 visiting_p1 visiting_p2 visiting_p3 visiting_p4 visiting_p5 visiting_p6  start_coordinate  mid_coordinate  end_coordinate point_phase   attack_phase  \\\n4                 1                    0                    1                        1          00       7      11      22       2       5      32           2           3           9          13          17          21               282            &lt;NA&gt;            8080       Serve            nan   \n5                 1                    0                    1                        1         00B       7      11      22       2       5      32           2           3           9          13          17          21               282            &lt;NA&gt;            8080   Reception            nan   \n6                 1                    0                    1                        1          00       7      11      22       2       5      32           2           3           9          13          17          21              3234            &lt;NA&gt;            &lt;NA&gt;   Reception            nan   \n7                 1                    0                    1                        1         00F       7      11      22       2       5      32           2           3           9          13          17          21              4417            5316            7913   Reception      Reception   \n8                 1                    0                    1                        1          00       7      11      22       2       5      32           2           3           9          13          17          21              4784            &lt;NA&gt;            &lt;NA&gt;       Serve            nan   \n9                 1                    0                    1                        1         00F       7      11      22       2       5      32           2           3           9          13          17          21              5683            5316            4518   Reception            nan   \n10                1                    0                    1                        1          00       7      11      22       2       5      32           2           3           9          13          17          21              3941            &lt;NA&gt;            &lt;NA&gt;   Reception            nan   \n11                1                    0                    1                        1         00F       7      11      22       2       5      32           2           3           9          13          17          21              4285            5482            7875   Reception  SO-Transition   \n12                1                    0                    1                        1          00       7      11      22       2       5      32           2           3           9          13          17          21              4618            &lt;NA&gt;            &lt;NA&gt;       Serve            nan   \n13                1                    0                    1                        1         00B       7      11      22       2       5      32           2           3           9          13          17          21              4285            5482            7847       Serve            nan   \n\n   start_coordinate_x start_coordinate_y mid_coordinate_x mid_coordinate_y end_coordinate_x end_coordinate_y set_number              home_team                    visiting_team home_team_id visiting_team_id           point_won_by           serving_team                   receiving_team  \\\n4             3.18125          -0.055552             &lt;NA&gt;             &lt;NA&gt;          3.10625          5.72222          1  University of Arizona  University of California, Davis          248              112  University of Arizona  University of Arizona  University of California, Davis   \n5             3.18125          -0.055552             &lt;NA&gt;             &lt;NA&gt;          3.10625          5.72222          1  University of Arizona  University of California, Davis          248              112  University of Arizona  University of Arizona  University of California, Davis   \n6             1.38125           2.166668             &lt;NA&gt;             &lt;NA&gt;             &lt;NA&gt;             &lt;NA&gt;          1  University of Arizona  University of California, Davis          248              112  University of Arizona  University of Arizona  University of California, Davis   \n7             0.74375           3.055556          0.70625         3.722222          0.59375         5.648146          1  University of Arizona  University of California, Davis          248              112  University of Arizona  University of Arizona  University of California, Davis   \n8             3.25625           3.277778             &lt;NA&gt;             &lt;NA&gt;             &lt;NA&gt;             &lt;NA&gt;          1  University of Arizona  University of California, Davis          248              112  University of Arizona  University of Arizona  University of California, Davis   \n9             3.21875           3.944444          0.70625         3.722222          0.78125          3.12963          1  University of Arizona  University of California, Davis          248              112  University of Arizona  University of Arizona  University of California, Davis   \n10            1.64375           2.685186             &lt;NA&gt;             &lt;NA&gt;             &lt;NA&gt;             &lt;NA&gt;          1  University of Arizona  University of California, Davis          248              112  University of Arizona  University of Arizona  University of California, Davis   \n11            3.29375           2.907408          3.18125         3.796296          2.91875         5.574072          1  University of Arizona  University of California, Davis          248              112  University of Arizona  University of Arizona  University of California, Davis   \n12            0.78125           3.203704             &lt;NA&gt;             &lt;NA&gt;             &lt;NA&gt;             &lt;NA&gt;          1  University of Arizona  University of California, Davis          248              112  University of Arizona  University of Arizona  University of California, Davis   \n13            3.29375           2.907408          3.18125         3.796296          1.86875         5.574072          1  University of Arizona  University of California, Davis          248              112  University of Arizona  University of Arizona  University of California, Davis   \n\n    rally_number  possesion_number  \n4              1                 0  \n5              1                 1  \n6              1                 1  \n7              1                 1  \n8              1                 2  \n9              1                 2  \n10             1                 2  \n11             1                 2  \n12             1                 3  \n13             1                 3"
  },
  {
    "objectID": "reading_files.html#reading-multiple-dvw-files-from-different-folders",
    "href": "reading_files.html#reading-multiple-dvw-files-from-different-folders",
    "title": "Reading dvw files",
    "section": "Reading multiple dvw files from different folders",
    "text": "Reading multiple dvw files from different folders\nIn the event you have dvw files inside multiple folders, you may consider the following method to parse those:\n\n\nCode\nimport pandas as pd\nfrom datavolley import read_dv\nimport os\n\n# Assign path\ndvw_path_folder = os.path.expanduser(\"~\\\\desktop\\\\dvws\")\nfile_extension = \".dvw\"\n\n# Initialize an empty DataFrame to store combined data\ncombined_df = pd.DataFrame()\n\ndef process_file(path):\n    dv_instance = read_dv.DataVolley(os.path.join(dvw_path_folder, path))\n    df = dv_instance.get_plays()\n    return df\n\n# Loop through each file path in the directory and its subdirectories\nfor root, dirs, files in os.walk(dvw_path_folder):\n    for file_name in files:\n        if file_name.endswith(file_extension):\n            file_path = os.path.join(root, file_name)\n            combined_df = pd.concat([combined_df, process_file(file_path)], ignore_index=True)\n\nprint(\"DVW files read: \" + str(len(combined_df['match_id'].unique())))\n\nprint(combined_df[(combined_df['skill'].notna()) & (combined_df['skill'] != \"Point\")].head(10))\n\n\nDVW files read: 15\n                                match_id video_file_number video_time                code                             team player_number           player_name player_id      skill evaluation_code setter_position attack_code set_code set_type start_zone end_zone end_subzone num_players_numeric  \\\n4   e0730137-f6fc-4902-9a11-ad457f1c276a                 1        553   *07SM+~~~15B~~~00            University of Arizona             7             Ana Heath   -392644      Serve               +               1         NaN      NaN      NaN          1        5           B                 NaN   \n5   e0730137-f6fc-4902-9a11-ad457f1c276a                 1        554  a17RM-~~~15BW~~00B  University of California, Davis            17            Megan Lenn   -318259  Reception               -               1         NaN      NaN      NaN          1        5           B                 NaN   \n6   e0730137-f6fc-4902-9a11-ad457f1c276a                 1        556   a02EH#~~~~7B~~~00  University of California, Davis             2           Casi Newman   -318257        Set               #               1         NaN      NaN        ~        NaN        7           B                 NaN   \n7   e0730137-f6fc-4902-9a11-ad457f1c276a                 1        557  a09AH+V5~41BH2~00F  University of California, Davis             9         Amara Aimufua   -318258     Attack               +               1          V5      NaN      NaN          4        1           B                   2   \n8   e0730137-f6fc-4902-9a11-ad457f1c276a                 1        558   *02BH/~~~~2B~~~00            University of Arizona             2  Sofia Maldonado Diaz   -312203      Block               /               1         NaN      NaN      NaN        NaN        2           B                 NaN   \n9   e0730137-f6fc-4902-9a11-ad457f1c276a                 1        558  a09DH+~~~44CC~~00F  University of California, Davis             9         Amara Aimufua   -318258        Dig               +               1         NaN      NaN      NaN          4        4           C                 NaN   \n10  e0730137-f6fc-4902-9a11-ad457f1c276a                 1        559   a07EH#~~~~3D~~~00  University of California, Davis             7              Julia Ng   -336145        Set               #               1         NaN      NaN        ~        NaN        3           D                 NaN   \n11  e0730137-f6fc-4902-9a11-ad457f1c276a                 1        561  a03AH-V6~25BH2~00F  University of California, Davis             3      Olivia Utterback   -318256     Attack               -               1          V6      NaN      NaN          2        5           B                   2   \n12  e0730137-f6fc-4902-9a11-ad457f1c276a                 1        561   *22BH+~~~~4C~~~00            University of Arizona            22         Nicole Briggs   -334503      Block               +               1         NaN      NaN      NaN        NaN        4           C                 NaN   \n13  e0730137-f6fc-4902-9a11-ad457f1c276a                 1        562  *05DH#~~~26BB~~00B            University of Arizona             5         Jordan Wilson   -434959        Dig               #               1         NaN      NaN      NaN          2        6           B                 NaN   \n\n    home_team_score  visiting_team_score home_setter_position visiting_setter_position custom_code home_p1 home_p2 home_p3 home_p4 home_p5 home_p6 visiting_p1 visiting_p2 visiting_p3 visiting_p4 visiting_p5 visiting_p6  start_coordinate  mid_coordinate  end_coordinate point_phase   attack_phase  \\\n4                 1                    0                    1                        1          00       7      11      22       2       5      32           2           3           9          13          17          21               282            &lt;NA&gt;            8080       Serve            nan   \n5                 1                    0                    1                        1         00B       7      11      22       2       5      32           2           3           9          13          17          21               282            &lt;NA&gt;            8080   Reception            nan   \n6                 1                    0                    1                        1          00       7      11      22       2       5      32           2           3           9          13          17          21              3234            &lt;NA&gt;            &lt;NA&gt;   Reception            nan   \n7                 1                    0                    1                        1         00F       7      11      22       2       5      32           2           3           9          13          17          21              4417            5316            7913   Reception      Reception   \n8                 1                    0                    1                        1          00       7      11      22       2       5      32           2           3           9          13          17          21              4784            &lt;NA&gt;            &lt;NA&gt;       Serve            nan   \n9                 1                    0                    1                        1         00F       7      11      22       2       5      32           2           3           9          13          17          21              5683            5316            4518   Reception            nan   \n10                1                    0                    1                        1          00       7      11      22       2       5      32           2           3           9          13          17          21              3941            &lt;NA&gt;            &lt;NA&gt;   Reception            nan   \n11                1                    0                    1                        1         00F       7      11      22       2       5      32           2           3           9          13          17          21              4285            5482            7875   Reception  SO-Transition   \n12                1                    0                    1                        1          00       7      11      22       2       5      32           2           3           9          13          17          21              4618            &lt;NA&gt;            &lt;NA&gt;       Serve            nan   \n13                1                    0                    1                        1         00B       7      11      22       2       5      32           2           3           9          13          17          21              4285            5482            7847       Serve            nan   \n\n   start_coordinate_x start_coordinate_y mid_coordinate_x mid_coordinate_y end_coordinate_x end_coordinate_y set_number              home_team                    visiting_team home_team_id visiting_team_id           point_won_by           serving_team                   receiving_team  \\\n4             3.18125          -0.055552             &lt;NA&gt;             &lt;NA&gt;          3.10625          5.72222          1  University of Arizona  University of California, Davis          248              112  University of Arizona  University of Arizona  University of California, Davis   \n5             3.18125          -0.055552             &lt;NA&gt;             &lt;NA&gt;          3.10625          5.72222          1  University of Arizona  University of California, Davis          248              112  University of Arizona  University of Arizona  University of California, Davis   \n6             1.38125           2.166668             &lt;NA&gt;             &lt;NA&gt;             &lt;NA&gt;             &lt;NA&gt;          1  University of Arizona  University of California, Davis          248              112  University of Arizona  University of Arizona  University of California, Davis   \n7             0.74375           3.055556          0.70625         3.722222          0.59375         5.648146          1  University of Arizona  University of California, Davis          248              112  University of Arizona  University of Arizona  University of California, Davis   \n8             3.25625           3.277778             &lt;NA&gt;             &lt;NA&gt;             &lt;NA&gt;             &lt;NA&gt;          1  University of Arizona  University of California, Davis          248              112  University of Arizona  University of Arizona  University of California, Davis   \n9             3.21875           3.944444          0.70625         3.722222          0.78125          3.12963          1  University of Arizona  University of California, Davis          248              112  University of Arizona  University of Arizona  University of California, Davis   \n10            1.64375           2.685186             &lt;NA&gt;             &lt;NA&gt;             &lt;NA&gt;             &lt;NA&gt;          1  University of Arizona  University of California, Davis          248              112  University of Arizona  University of Arizona  University of California, Davis   \n11            3.29375           2.907408          3.18125         3.796296          2.91875         5.574072          1  University of Arizona  University of California, Davis          248              112  University of Arizona  University of Arizona  University of California, Davis   \n12            0.78125           3.203704             &lt;NA&gt;             &lt;NA&gt;             &lt;NA&gt;             &lt;NA&gt;          1  University of Arizona  University of California, Davis          248              112  University of Arizona  University of Arizona  University of California, Davis   \n13            3.29375           2.907408          3.18125         3.796296          1.86875         5.574072          1  University of Arizona  University of California, Davis          248              112  University of Arizona  University of Arizona  University of California, Davis   \n\n    rally_number  possesion_number  \n4              1                 0  \n5              1                 1  \n6              1                 1  \n7              1                 1  \n8              1                 2  \n9              1                 2  \n10             1                 2  \n11             1                 2  \n12             1                 3  \n13             1                 3"
  },
  {
    "objectID": "reading_files.html#saving-the-dataframe-as-a-csv",
    "href": "reading_files.html#saving-the-dataframe-as-a-csv",
    "title": "Reading dvw files",
    "section": "Saving the dataframe as a csv",
    "text": "Saving the dataframe as a csv\nIf you’d like to save your data into a csv.\n\n\nCode\n#combined_df.to_csv('combined_data.csv') # Where your current directory lives\n\n\nHowever, this method may present issues when it comes to encoding. You may want to choose some alternate methods when encoding becomes an issue. Saving to excel is one option.\n\n\nCode\n# You may need to run pip install openpyxl before saving to excel\n#combined_df.to_excel('combined_data.xlsx')"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Getting started with pydatavolley",
    "section": "",
    "text": "Welcome to pydatavolley, where data analysis meets volleyball. This book is a curated collection of skills designed for the volleyball analyst eager to transcend the conventional boundaries of data exploration.\nIn the following chapters, we will delve into various topics that not only harness the power of Python but also explore the realm of R. Each chapter and section of this book is crafted to seamlessly integrate both languages, providing a comprehensive and versatile approach to data analysis in the context of volleyball. We will focus on using pandas, if your are a R user interesting in a more R tidyverse structure consider using siuba which replicates the use of dplyr from R’s tidyverse.\nWhether you’re a seasoned analyst looking to enhance your skills or a newcomer eager to explore the intersection of data, pydatavolley is your guide."
  },
  {
    "objectID": "index.html#welcome",
    "href": "index.html#welcome",
    "title": "Getting started with pydatavolley",
    "section": "",
    "text": "Welcome to pydatavolley, where data analysis meets volleyball. This book is a curated collection of skills designed for the volleyball analyst eager to transcend the conventional boundaries of data exploration.\nIn the following chapters, we will delve into various topics that not only harness the power of Python but also explore the realm of R. Each chapter and section of this book is crafted to seamlessly integrate both languages, providing a comprehensive and versatile approach to data analysis in the context of volleyball. We will focus on using pandas, if your are a R user interesting in a more R tidyverse structure consider using siuba which replicates the use of dplyr from R’s tidyverse.\nWhether you’re a seasoned analyst looking to enhance your skills or a newcomer eager to explore the intersection of data, pydatavolley is your guide."
  },
  {
    "objectID": "index.html#Acknowledgements",
    "href": "index.html#Acknowledgements",
    "title": "Getting started with pydatavolley",
    "section": "Acknowledgements",
    "text": "Acknowledgements\nOpenvolley team and their support for my addition to pydatavolley."
  },
  {
    "objectID": "examples/01_heatmap_attacks.html",
    "href": "examples/01_heatmap_attacks.html",
    "title": "pydatavolley",
    "section": "",
    "text": "Code\nfrom datavolley import read_dv\nimport datavolley.pycourt as pycourt\nimport datavolley.pycourt as half_pycourt \nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings(\"ignore\", \"is_categorical_dtype\")\nwarnings.filterwarnings(\"ignore\", \"use_inf_as_na\")\n\n\n\n\nCode\ndvf = read_dv.DataVolley()\nplays = dvf.get_plays()\n\n\n\n\nCode\nattacks_data= plays[(plays['skill'] == 'Attack') & (plays.home_team==dvf.home_team)] \ncoordinate_df = attacks_data[['start_coordinate_x',\n                          'start_coordinate_y',\n                          'end_coordinate_x',\n                          'end_coordinate_y']]\n\ndef plot_coordinates(coordinates):\n    pycourt.pycourt()\n    # Plot the coordinates\n    plt.scatter(coordinates['end_coordinate_x'], coordinates['end_coordinate_y'], color='blue')\n    plt.show(block=True)\n\nplot_coordinates(coordinate_df)\n\n\n\n\n\n\n\nCode\n# heatmap of the end direction of attacks\nfig, ax = plt.subplots()\npycourt.pycourt(ax)\nsns.kdeplot(x=coordinate_df['end_coordinate_x'], y=coordinate_df['end_coordinate_y'], ax=ax, cmap=\"YlOrRd\", fill=True, alpha=0.5)\nplt.show()\n\n\n\n\n\n\n\nCode\n# Using the function to create the heatmap\n# Creating the volleyball court\nfig, ax = plt.subplots()\npycourt.half_pycourt(ax)\n# Creating the heatmap\nsns.kdeplot(x=coordinate_df['end_coordinate_x'], y=coordinate_df['end_coordinate_y'], ax=ax, cmap=\"YlOrRd\", fill=True, alpha=0.5)\nplt.show()\n\n\n\n\n\n\n\nCode\nattacks_data= plays[(plays['skill'] == 'Attack') & (plays.home_team==dvf.home_team)]"
  },
  {
    "objectID": "data_description.html",
    "href": "data_description.html",
    "title": "Data Description Example",
    "section": "",
    "text": "Gather data:\n\n\nCode\nfrom datavolley import read_dv\nimport pandas as pd\nimport urllib.request\ndatavolleyfile=\"&stuttgart-schwerin-2018.dvw\"\nurl_source_file = \"https://raw.githubusercontent.com/openvolley/ovva/master/inst/extdata/demo/%26stuttgart-schwerin-2018.dvw\"\nsource = urllib.request.urlopen(url_source_file).read().decode('UTF-8')\n# Scrittura dei dati in un file locale\nwith open(datavolleyfile, 'w') as file:\n    file.write(source)\n\n\nRead data:\n\n\nCode\n# change this if you have your file\ndatavolleyfile=\"&stuttgart-schwerin-2018.dvw\"\n# Reading the file\ndvf = read_dv.DataVolley(datavolleyfile)\n# extract all the actions\nplays = dvf.get_plays()\n\n\nEvaluate match data:\n\n\nCode\nchampionship = dvf.match_info.championship.values[0]\nprint(championship)\nmatch_day = dvf.match_info.day.values[0]\nprint(match_day)\nmatch_time = dvf.match_info.time.values[0]\nprint(match_time)\nmatch_season = dvf.match_info.season.values[0]\nprint(match_season)\n\n\n1. Bundesliga Frauen - 1. Bundesliga Frauen - Playoffs\n21/04/2018\n19.30.00\n2017/2018\n\n\n\n\nCode\ntotal_minutes = dvf.sets_info.duration.sum()\nprint(total_minutes)\nhours = total_minutes // 60\nprint(hours)\nminutes = total_minutes % 60\nprint(minutes)\n\n\n137\n2\n17\n\n\n\n\nCode\nstring_sets = \"\"\nduraton_sets = \"\"\nfor idx, row in dvf.sets_info.iterrows():\n   string_sets += \"(\" + str(row[\"home4\"]) + \"-\" + str(row[\"visitor4\"]) + \") \"\n   duraton_sets += str(row[\"duration\"]) + \"',\"\nduration_sets = duraton_sets.rstrip(\",\")\nprint(string_sets)\nprint(duration_sets)\n\n\n(25-21) (22-25) (22-25) (25-21) (12-15) \n27',29',30',30',21'\n\n\nPutting it all together:\n\n\nCode\nprint(\"\"\"\n%s - %s\n%s\n%s - %s \n%s-%s %s\nduration: %s:%sh (%s)\n\"\"\" % (match_day, match_time, championship, dvf.home_team, \n       dvf.visiting_team, dvf.home_setswon, dvf.visiting_setswon,\n       string_sets,str(hours).zfill(2), str(minutes).zfill(2), duration_sets))\n\n\n\n21/04/2018 - 19.30.00\n1. Bundesliga Frauen - 1. Bundesliga Frauen - Playoffs\nAllianz MTV Stuttgart - SSC Palmberg Schwerin \n2-3 (25-21) (22-25) (22-25) (25-21) (12-15) \nduration: 02:17h (27',29',30',30',21')\n\n\n\n\n\nCode\nprint(dvf.home_team)\nprint(\"name\\tname\")\nplayers = dvf.players_home\nplayers['player_number'] = pd.to_numeric(players['player_number'], errors='coerce')\nplayers = players.sort_values(\"player_number\")\nplays = dvf.get_plays()\nfor idx, row in players.iterrows():\n    player_number = row[\"player_number\"]\n    player_name = row['player_name'].rstrip()\n    player_id = row['player_id']\n    points = plays[(plays.player_id == player_id) & plays.skill.isin(['Attack', 'Serve','Block']) & (plays.evaluation_code == \"#\")].shape[0]\n    errors = plays[(plays.player_id == player_id) & plays.skill.isin(['Attack', 'Reception','Dig','Set','Block']) & (plays.evaluation_code == \"=\")].shape[0]\n    print(\"\"\"%s\\t%s (%i,%i)\"\"\" % (player_number,player_name, points, errors))\nprint(\"coaches\")\nprint(\" \" + dvf.home_coaches[0])\nprint(\" \" + dvf.home_coaches[1])\nprint(\"\\nin parentheses: number of points, number of errors\")\n\n\nAllianz MTV Stuttgart\nname    name\n1   Nikoleta Perovic (21,3)\n2   Femke Stoltenborg (2,1)\n3   Micheli Tomazela Pissinato (0,0)\n5   Mallory Grace McCage (16,4)\n6   Annie Cesar (0,2)\n7   Renata Sandor (12,10)\n8   Julia Schaefer (1,1)\n10  Pia KÃ¤stner (1,0)\n11  Teodora Pusic (0,0)\n12  Deborah van Daelen (5,3)\n14  Jenna Potts (0,0)\n16  Michaela Mlejnkova (18,5)\n17  Paige Tapp (7,2)\ncoaches\n Athanasopoulos Giannis\n Paraschidis I, Miyashiro T\n\nin parentheses: number of points, number of errors\n\n\nPrint home coaches:\n\n\nCode\nprint(dvf.home_coaches[0])\n\n\nAthanasopoulos Giannis\n\n\n\n\nCode\nprint(dvf.visiting_team)\nprint(\"name\\tname\")\nplayers = dvf.players_visiting\nplayers['player_number'] = pd.to_numeric(players['player_number'], errors='coerce')\nplayers = players.sort_values(\"player_number\")\nplays = dvf.get_plays()\nfor idx, row in players.iterrows():\n    player_number = row[\"player_number\"]\n    player_name = row['player_name'].rstrip()\n    player_id = row['player_id']\n    points = plays[(plays.player_id == player_id) & plays.skill.isin(['Attack', 'Serve','Block']) & (plays.evaluation_code == \"#\")].shape[0]\n    errors = plays[(plays.player_id == player_id) & plays.skill.isin(['Attack', 'Reception','Dig','Set','Block']) & (plays.evaluation_code == \"=\")].shape[0]\n    print(\"\"\"%s\\t%s (%i,%i)\"\"\" % (player_number,player_name, points, errors))\nprint(\"coaches\")\nprint(\" \" + dvf.visiting_coaches[0])\nprint(\" \" + dvf.visiting_coaches[1])\nprint(\"\\nin parentheses: number of points, number of errors\")\n\n\nSSC Palmberg Schwerin\nname    name\n1   Greta SzakmÃ¡ry (25,8)\n2   Martenne Julia Bettendorf (0,0)\n3   Louisa Lippmann (20,9)\n5   Sabrina Krause (0,0)\n6   Jennifer Geerties (11,5)\n7   Luna Veronica Carocci (0,3)\n8   Kaisa Alanko (1,1)\n10  Denise Hanke (6,4)\n11  Beta Dumancic (12,0)\n12  Lauren Barfield (9,0)\n14  Elisa Lohmann (0,0)\n15  Jelena Oluic (2,0)\n16  Marie SchÃ¶lzel (0,0)\ncoaches\n Koslowski Felix\n Hartmann M, Sens P\n\nin parentheses: number of points, number of errors"
  },
  {
    "objectID": "data_clean.html",
    "href": "data_clean.html",
    "title": "Data cleaning",
    "section": "",
    "text": "Depending on your needs, you may want to add a few items into your plays dataframe. Doing so can help navigate your data more efficiently in the long run."
  },
  {
    "objectID": "data_clean.html#data-cleaning",
    "href": "data_clean.html#data-cleaning",
    "title": "Data cleaning",
    "section": "",
    "text": "Depending on your needs, you may want to add a few items into your plays dataframe. Doing so can help navigate your data more efficiently in the long run."
  },
  {
    "objectID": "examples/00_data_description.html",
    "href": "examples/00_data_description.html",
    "title": "pydatavolley",
    "section": "",
    "text": "Code\nfrom datavolley import read_dv\nimport pandas as pd\n\n\n\n\nCode\nimport urllib.request\ndatavolleyfile=\"&stuttgart-schwerin-2018.dvw\"\nurl_source_file = \"https://raw.githubusercontent.com/openvolley/ovva/master/inst/extdata/demo/%26stuttgart-schwerin-2018.dvw\"\nsource = urllib.request.urlopen(url_source_file).read().decode('UTF-8')\n# Scrittura dei dati in un file locale\nwith open(datavolleyfile, 'w') as file:\n    file.write(source)\n\n\n\n\nCode\n# change this if you have your file\ndatavolleyfile=\"&stuttgart-schwerin-2018.dvw\"\n# Reading the file\ndvf = read_dv.DataVolley(datavolleyfile)\n# extract all the actions\nplays = dvf.get_plays()\n\n\n\n\nCode\nchampionship = dvf.match_info.championship.values[0]\nmatch_day = dvf.match_info.day.values[0]\nmatch_time = dvf.match_info.time.values[0]\nmatch_season = dvf.match_info.season.values[0]\n\n\n\n\nCode\ntotal_minutes = dvf.sets_info.duration.sum()\nhours = total_minutes // 60\nminutes = total_minutes % 60\n\n\n\n\nCode\nstring_sets = \"\"\nduraton_sets = \"\"\nfor idx, row in dvf.sets_info.iterrows():\n   string_sets += \"(\" + str(row[\"home4\"]) + \"-\" + str(row[\"visitor4\"]) + \") \"\n   duraton_sets += str(row[\"duration\"]) + \"',\"\n\n\n\n\nCode\nduration_sets = duraton_sets.rstrip(\",\")\n\n\n\n\nCode\nprint(\"\"\"\n%s - %s\n%s\n%s - %s \n%s-%s %s\nduration: %s:%sh (%s)\n\"\"\" % (match_day, match_time, championship, dvf.home_team, \n       dvf.visiting_team, dvf.home_setswon, dvf.visiting_setswon,\n       string_sets,str(hours).zfill(2), str(minutes).zfill(2), duration_sets))\n\n\n\n21/04/2018 - 19.30.00\n1. Bundesliga Frauen - 1. Bundesliga Frauen - Playoffs\nAllianz MTV Stuttgart - SSC Palmberg Schwerin \n2-3 (25-21) (22-25) (22-25) (25-21) (12-15) \nduration: 02:17h (27',29',30',30',21')\n\n\n\n\n\nCode\nprint(dvf.home_team)\nprint(\"name\\tname\")\nplayers = dvf.players_home\nplayers['player_number'] = pd.to_numeric(players['player_number'], errors='coerce')\nplayers = players.sort_values(\"player_number\")\nplays = dvf.get_plays()\nfor idx, row in players.iterrows():\n    player_number = row[\"player_number\"]\n    player_name = row['player_name'].rstrip()\n    player_id = row['player_id']\n    points = plays[(plays.player_id == player_id) & plays.skill.isin(['Attack', 'Serve','Block']) & (plays.evaluation_code == \"#\")].shape[0]\n    errors = plays[(plays.player_id == player_id) & plays.skill.isin(['Attack', 'Reception','Dig','Set','Block']) & (plays.evaluation_code == \"=\")].shape[0]\n    print(\"\"\"%s\\t%s (%i,%i)\"\"\" % (player_number,player_name, points, errors))\nprint(\"coaches\")\nprint(\" \" + dvf.home_coaches[0])\nprint(\" \" + dvf.home_coaches[1])\nprint(\"\\nin parentheses: number of points, number of errors\")\n\n\nAllianz MTV Stuttgart\nname    name\n1   Nikoleta Perovic (21,3)\n2   Femke Stoltenborg (2,1)\n3   Micheli Tomazela Pissinato (0,0)\n5   Mallory Grace McCage (16,4)\n6   Annie Cesar (0,2)\n7   Renata Sandor (12,10)\n8   Julia Schaefer (1,1)\n10  Pia KÃ¤stner (1,0)\n11  Teodora Pusic (0,0)\n12  Deborah van Daelen (5,3)\n14  Jenna Potts (0,0)\n16  Michaela Mlejnkova (18,5)\n17  Paige Tapp (7,2)\ncoaches\n Athanasopoulos Giannis\n Paraschidis I, Miyashiro T\n\nin parentheses: number of points, number of errors\n\n\n\n\nCode\ndvf.home_coaches[0]\n\n\n'Athanasopoulos Giannis'\n\n\n\n\nCode\nprint(dvf.visiting_team)\nprint(\"name\\tname\")\nplayers = dvf.players_visiting\nplayers['player_number'] = pd.to_numeric(players['player_number'], errors='coerce')\nplayers = players.sort_values(\"player_number\")\nplays = dvf.get_plays()\nfor idx, row in players.iterrows():\n    player_number = row[\"player_number\"]\n    player_name = row['player_name'].rstrip()\n    player_id = row['player_id']\n    points = plays[(plays.player_id == player_id) & plays.skill.isin(['Attack', 'Serve','Block']) & (plays.evaluation_code == \"#\")].shape[0]\n    errors = plays[(plays.player_id == player_id) & plays.skill.isin(['Attack', 'Reception','Dig','Set','Block']) & (plays.evaluation_code == \"=\")].shape[0]\n    print(\"\"\"%s\\t%s (%i,%i)\"\"\" % (player_number,player_name, points, errors))\nprint(\"coaches\")\nprint(\" \" + dvf.visiting_coaches[0])\nprint(\" \" + dvf.visiting_coaches[1])\nprint(\"\\nin parentheses: number of points, number of errors\")\n\n\nSSC Palmberg Schwerin\nname    name\n1   Greta SzakmÃ¡ry (25,8)\n2   Martenne Julia Bettendorf (0,0)\n3   Louisa Lippmann (20,9)\n5   Sabrina Krause (0,0)\n6   Jennifer Geerties (11,5)\n7   Luna Veronica Carocci (0,3)\n8   Kaisa Alanko (1,1)\n10  Denise Hanke (6,4)\n11  Beta Dumancic (12,0)\n12  Lauren Barfield (9,0)\n14  Elisa Lohmann (0,0)\n15  Jelena Oluic (2,0)\n16  Marie SchÃ¶lzel (0,0)\ncoaches\n Koslowski Felix\n Hartmann M, Sens P\n\nin parentheses: number of points, number of errors"
  },
  {
    "objectID": "ide.html",
    "href": "ide.html",
    "title": "Using python",
    "section": "",
    "text": "IDE or Integrated development environment. This book will be focused on use with Visual Studio Code (VSC).\nHowever you can use R.\n\nThe methods are focused on using Windows VLC however, using a Mac will work just as well inasmuch as your installation of pip is properly performed."
  },
  {
    "objectID": "ide.html#the-beginning",
    "href": "ide.html#the-beginning",
    "title": "Using python",
    "section": "",
    "text": "IDE or Integrated development environment. This book will be focused on use with Visual Studio Code (VSC).\nHowever you can use R.\n\nThe methods are focused on using Windows VLC however, using a Mac will work just as well inasmuch as your installation of pip is properly performed."
  },
  {
    "objectID": "ide.html#vsc-enviorment-vs-projects-vs-none",
    "href": "ide.html#vsc-enviorment-vs-projects-vs-none",
    "title": "Using python",
    "section": "VSC Enviorment vs Projects vs None",
    "text": "VSC Enviorment vs Projects vs None\nIf you are a R user who doesn’t care so much about organizing project structure, using python can be similar but also messy in the long run. Simply create a file where your path currently is, read dvw file(s) from the desired path and away you go! Warning this can get messy and difficult to navigate if you start using multiple ad hoc files, reading hundreds of files, whilst running reports or dashboards.\nThe advantage of using environments is keeping your project structure easy to understand. You can also add your own package ingredients which can speed up the process of your file processing, keep clean your work space and run dashboards or reports easily.\nUsing projects is very simple in VSC, which can help ease the messiness if you intend on using more than just reading files. Simple create a folder in the directory you want, start VSC, and open folder! Your project is started and anything you save at that point will go to the folder which you created your new folder in. This also allows for different files to be imported into each other."
  },
  {
    "objectID": "ide.html#combing-python-and-r",
    "href": "ide.html#combing-python-and-r",
    "title": "Using python",
    "section": "Combing Python and R?",
    "text": "Combing Python and R?\nIt is possible to use python in R studio, in this you can create a new project in R, parse your files in python and save a csv/excel file. Then read in R."
  },
  {
    "objectID": "install_packages.html",
    "href": "install_packages.html",
    "title": "Installing packages",
    "section": "",
    "text": "Using pip or rather package installer for Python, you can download pydatavolley.\nUsing windows:\npip install pydatavolley\nIf you are using a mac there are likely some additional steps you’ll need to follow to install pip first. You can find those here: https://www.geeksforgeeks.org/how-to-install-pip-in-macos/#\nSome additional packages used in this book:\npip install numpy\npip install pandas\npip install siuba\npip install pyjanitor"
  },
  {
    "objectID": "install_packages.html#Packages",
    "href": "install_packages.html#Packages",
    "title": "Installing packages",
    "section": "",
    "text": "Using pip or rather package installer for Python, you can download pydatavolley.\nUsing windows:\npip install pydatavolley\nIf you are using a mac there are likely some additional steps you’ll need to follow to install pip first. You can find those here: https://www.geeksforgeeks.org/how-to-install-pip-in-macos/#\nSome additional packages used in this book:\npip install numpy\npip install pandas\npip install siuba\npip install pyjanitor"
  }
]