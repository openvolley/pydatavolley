{
  "hash": "245245fc076b32bfe15833c3c621ecce",
  "result": {
    "markdown": "---\ntitle: \"Data Description Example\"\n---\n\nGather data:\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nfrom datavolley import read_dv\nimport pandas as pd\nimport urllib.request\ndatavolleyfile=\"&stuttgart-schwerin-2018.dvw\"\nurl_source_file = \"https://raw.githubusercontent.com/openvolley/ovva/master/inst/extdata/demo/%26stuttgart-schwerin-2018.dvw\"\nsource = urllib.request.urlopen(url_source_file).read().decode('UTF-8')\n# Scrittura dei dati in un file locale\nwith open(datavolleyfile, 'w') as file:\n    file.write(source)\n```\n:::\n\n\nRead data:\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\n# change this if you have your file\ndatavolleyfile=\"&stuttgart-schwerin-2018.dvw\"\n# Reading the file\ndvf = read_dv.DataVolley(datavolleyfile)\n# extract all the actions\nplays = dvf.get_plays()\n```\n:::\n\n\nEvaluate match data:\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\nchampionship = dvf.match_info.championship.values[0]\nprint(championship)\nmatch_day = dvf.match_info.day.values[0]\nprint(match_day)\nmatch_time = dvf.match_info.time.values[0]\nprint(match_time)\nmatch_season = dvf.match_info.season.values[0]\nprint(match_season)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n1. Bundesliga Frauen - 1. Bundesliga Frauen - Playoffs\n21/04/2018\n19.30.00\n2017/2018\n```\n:::\n:::\n\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\ntotal_minutes = dvf.sets_info.duration.sum()\nprint(total_minutes)\nhours = total_minutes // 60\nprint(hours)\nminutes = total_minutes % 60\nprint(minutes)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n137\n2\n17\n```\n:::\n:::\n\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\nstring_sets = \"\"\nduraton_sets = \"\"\nfor idx, row in dvf.sets_info.iterrows():\n   string_sets += \"(\" + str(row[\"home4\"]) + \"-\" + str(row[\"visitor4\"]) + \") \"\n   duraton_sets += str(row[\"duration\"]) + \"',\"\nduration_sets = duraton_sets.rstrip(\",\")\nprint(string_sets)\nprint(duration_sets)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n(25-21) (22-25) (22-25) (25-21) (12-15) \n27',29',30',30',21'\n```\n:::\n:::\n\n\nPutting it all together:\n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\nprint(\"\"\"\n%s - %s\n%s\n%s - %s \n%s-%s %s\nduration: %s:%sh (%s)\n\"\"\" % (match_day, match_time, championship, dvf.home_team, \n       dvf.visiting_team, dvf.home_setswon, dvf.visiting_setswon,\n       string_sets,str(hours).zfill(2), str(minutes).zfill(2), duration_sets))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n21/04/2018 - 19.30.00\n1. Bundesliga Frauen - 1. Bundesliga Frauen - Playoffs\nAllianz MTV Stuttgart - SSC Palmberg Schwerin \n2-3 (25-21) (22-25) (22-25) (25-21) (12-15) \nduration: 02:17h (27',29',30',30',21')\n\n```\n:::\n:::\n\n\n::: {.cell execution_count=7}\n``` {.python .cell-code}\nprint(dvf.home_team)\nprint(\"name\\tname\")\nplayers = dvf.players_home\nplayers['player_number'] = pd.to_numeric(players['player_number'], errors='coerce')\nplayers = players.sort_values(\"player_number\")\nplays = dvf.get_plays()\nfor idx, row in players.iterrows():\n    player_number = row[\"player_number\"]\n    player_name = row['player_name'].rstrip()\n    player_id = row['player_id']\n    points = plays[(plays.player_id == player_id) & plays.skill.isin(['Attack', 'Serve','Block']) & (plays.evaluation_code == \"#\")].shape[0]\n    errors = plays[(plays.player_id == player_id) & plays.skill.isin(['Attack', 'Reception','Dig','Set','Block']) & (plays.evaluation_code == \"=\")].shape[0]\n    print(\"\"\"%s\\t%s (%i,%i)\"\"\" % (player_number,player_name, points, errors))\nprint(\"coaches\")\nprint(\" \" + dvf.home_coaches[0])\nprint(\" \" + dvf.home_coaches[1])\nprint(\"\\nin parentheses: number of points, number of errors\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAllianz MTV Stuttgart\nname\tname\n1\tNikoleta Perovic (21,3)\n2\tFemke Stoltenborg (2,1)\n3\tMicheli Tomazela Pissinato (0,0)\n5\tMallory Grace McCage (16,4)\n6\tAnnie Cesar (0,2)\n7\tRenata Sandor (12,10)\n8\tJulia Schaefer (1,1)\n10\tPia KÃ¤stner (1,0)\n11\tTeodora Pusic (0,0)\n12\tDeborah van Daelen (5,3)\n14\tJenna Potts (0,0)\n16\tMichaela Mlejnkova (18,5)\n17\tPaige Tapp (7,2)\ncoaches\n Athanasopoulos Giannis\n Paraschidis I, Miyashiro T\n\nin parentheses: number of points, number of errors\n```\n:::\n:::\n\n\nPrint home coaches:\n\n::: {.cell execution_count=8}\n``` {.python .cell-code}\nprint(dvf.home_coaches[0])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAthanasopoulos Giannis\n```\n:::\n:::\n\n\n::: {.cell execution_count=9}\n``` {.python .cell-code}\nprint(dvf.visiting_team)\nprint(\"name\\tname\")\nplayers = dvf.players_visiting\nplayers['player_number'] = pd.to_numeric(players['player_number'], errors='coerce')\nplayers = players.sort_values(\"player_number\")\nplays = dvf.get_plays()\nfor idx, row in players.iterrows():\n    player_number = row[\"player_number\"]\n    player_name = row['player_name'].rstrip()\n    player_id = row['player_id']\n    points = plays[(plays.player_id == player_id) & plays.skill.isin(['Attack', 'Serve','Block']) & (plays.evaluation_code == \"#\")].shape[0]\n    errors = plays[(plays.player_id == player_id) & plays.skill.isin(['Attack', 'Reception','Dig','Set','Block']) & (plays.evaluation_code == \"=\")].shape[0]\n    print(\"\"\"%s\\t%s (%i,%i)\"\"\" % (player_number,player_name, points, errors))\nprint(\"coaches\")\nprint(\" \" + dvf.visiting_coaches[0])\nprint(\" \" + dvf.visiting_coaches[1])\nprint(\"\\nin parentheses: number of points, number of errors\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSSC Palmberg Schwerin\nname\tname\n1\tGreta SzakmÃ¡ry (25,8)\n2\tMartenne Julia Bettendorf (0,0)\n3\tLouisa Lippmann (20,9)\n5\tSabrina Krause (0,0)\n6\tJennifer Geerties (11,5)\n7\tLuna Veronica Carocci (0,3)\n8\tKaisa Alanko (1,1)\n10\tDenise Hanke (6,4)\n11\tBeta Dumancic (12,0)\n12\tLauren Barfield (9,0)\n14\tElisa Lohmann (0,0)\n15\tJelena Oluic (2,0)\n16\tMarie SchÃ¶lzel (0,0)\ncoaches\n Koslowski Felix\n Hartmann M, Sens P\n\nin parentheses: number of points, number of errors\n```\n:::\n:::\n\n\n",
    "supporting": [
      "data_description_files"
    ],
    "filters": [],
    "includes": {}
  }
}