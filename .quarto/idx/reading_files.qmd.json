{"title":"Reading dvw files","markdown":{"yaml":{"title":"Reading dvw files"},"headingText":"DVW files","containsRefs":false,"markdown":"\n\n\nThe data project scouting software, data volley 4, files are the focus on this package. If your interested in some example files, you can find them [here](https://mevza.volleynet.at/Download/59).\n\n## Reading a single dvw\n\nThe provided example file is used. You would typically fill in the `None` with the actual path of your dvw files.\n\n```{python}\nimport pandas as pd\nfrom datavolley import read_dv\npd.set_option('display.max_columns', None) # Used so we can see the entire dataframe as it prints\npd.set_option('display.width', 300)\ndv_instance = read_dv.DataVolley(None) # Replace `None` with path of your dvw file \ndf = dv_instance.get_plays()\nprint(df[(df['skill'].notna()) & (df['skill'] != \"Point\")].head(10))\n```\n\n## Reading multiple dvw files\n\nThere are different methods when reading more than one dvw file. If you have more than 200 files you may consider using [`threading`](https://www.pythontutorial.net/python-concurrency/python-threading/).\n\nHere is one method to reading multiple files from a folder.\n\n```{python}\nimport pandas as pd\nfrom datavolley import read_dv\nimport os\n\n# Assign path\ndvw_path_folder = os.path.expanduser(\"~\\\\desktop\\\\dvws\")\nfile_extension = \".dvw\"\n\n# Get a list of all files with the specified extension in the directory\nfile_list = [f for f in os.listdir(dvw_path_folder) if f.endswith(file_extension)]\n\n# Initialize an empty DataFrame to store combined data\ncombined_df = pd.DataFrame()\n\ndef process_file(path):\n    dv_instance = read_dv.DataVolley(os.path.join(dvw_path_folder, path))\n    df = dv_instance.get_plays()\n    return df\n\n# Loop through each file path\nfor file_name in file_list:\n    combined_df = pd.concat([combined_df, process_file(file_name)], ignore_index=True)\n\nprint(\"DVW files read: \" + str(len(combined_df['match_id'].unique())))\n\nprint(combined_df[(combined_df['skill'].notna()) & (combined_df['skill'] != \"Point\")].head(10))\n```\n\n## Reading multiple dvw files from different folders\n\nIn the event you have dvw files inside multiple folders, you may consider the following method to parse those:\n\n```{python}\nimport pandas as pd\nfrom datavolley import read_dv\nimport os\n\n# Assign path\ndvw_path_folder = os.path.expanduser(\"~\\\\desktop\\\\dvws\")\nfile_extension = \".dvw\"\n\n# Initialize an empty DataFrame to store combined data\ncombined_df = pd.DataFrame()\n\ndef process_file(path):\n    dv_instance = read_dv.DataVolley(os.path.join(dvw_path_folder, path))\n    df = dv_instance.get_plays()\n    return df\n\n# Loop through each file path in the directory and its subdirectories\nfor root, dirs, files in os.walk(dvw_path_folder):\n    for file_name in files:\n        if file_name.endswith(file_extension):\n            file_path = os.path.join(root, file_name)\n            combined_df = pd.concat([combined_df, process_file(file_path)], ignore_index=True)\n\nprint(\"DVW files read: \" + str(len(combined_df['match_id'].unique())))\n\nprint(combined_df[(combined_df['skill'].notna()) & (combined_df['skill'] != \"Point\")].head(10))\n```\n\n## Saving the dataframe as a csv\n\nIf you'd like to save your data into a csv.\n\n```{python}\n#combined_df.to_csv('combined_data.csv') # Where your current directory lives\n```\n\nHowever, this method may present issues when it comes to encoding. You may want to choose some alternate methods when encoding becomes an issue. Saving to excel is one option.\n\n```{python}\n# You may need to run pip install openpyxl before saving to excel\n#combined_df.to_excel('combined_data.xlsx')\n```","srcMarkdownNoYaml":"\n\n## DVW files\n\nThe data project scouting software, data volley 4, files are the focus on this package. If your interested in some example files, you can find them [here](https://mevza.volleynet.at/Download/59).\n\n## Reading a single dvw\n\nThe provided example file is used. You would typically fill in the `None` with the actual path of your dvw files.\n\n```{python}\nimport pandas as pd\nfrom datavolley import read_dv\npd.set_option('display.max_columns', None) # Used so we can see the entire dataframe as it prints\npd.set_option('display.width', 300)\ndv_instance = read_dv.DataVolley(None) # Replace `None` with path of your dvw file \ndf = dv_instance.get_plays()\nprint(df[(df['skill'].notna()) & (df['skill'] != \"Point\")].head(10))\n```\n\n## Reading multiple dvw files\n\nThere are different methods when reading more than one dvw file. If you have more than 200 files you may consider using [`threading`](https://www.pythontutorial.net/python-concurrency/python-threading/).\n\nHere is one method to reading multiple files from a folder.\n\n```{python}\nimport pandas as pd\nfrom datavolley import read_dv\nimport os\n\n# Assign path\ndvw_path_folder = os.path.expanduser(\"~\\\\desktop\\\\dvws\")\nfile_extension = \".dvw\"\n\n# Get a list of all files with the specified extension in the directory\nfile_list = [f for f in os.listdir(dvw_path_folder) if f.endswith(file_extension)]\n\n# Initialize an empty DataFrame to store combined data\ncombined_df = pd.DataFrame()\n\ndef process_file(path):\n    dv_instance = read_dv.DataVolley(os.path.join(dvw_path_folder, path))\n    df = dv_instance.get_plays()\n    return df\n\n# Loop through each file path\nfor file_name in file_list:\n    combined_df = pd.concat([combined_df, process_file(file_name)], ignore_index=True)\n\nprint(\"DVW files read: \" + str(len(combined_df['match_id'].unique())))\n\nprint(combined_df[(combined_df['skill'].notna()) & (combined_df['skill'] != \"Point\")].head(10))\n```\n\n## Reading multiple dvw files from different folders\n\nIn the event you have dvw files inside multiple folders, you may consider the following method to parse those:\n\n```{python}\nimport pandas as pd\nfrom datavolley import read_dv\nimport os\n\n# Assign path\ndvw_path_folder = os.path.expanduser(\"~\\\\desktop\\\\dvws\")\nfile_extension = \".dvw\"\n\n# Initialize an empty DataFrame to store combined data\ncombined_df = pd.DataFrame()\n\ndef process_file(path):\n    dv_instance = read_dv.DataVolley(os.path.join(dvw_path_folder, path))\n    df = dv_instance.get_plays()\n    return df\n\n# Loop through each file path in the directory and its subdirectories\nfor root, dirs, files in os.walk(dvw_path_folder):\n    for file_name in files:\n        if file_name.endswith(file_extension):\n            file_path = os.path.join(root, file_name)\n            combined_df = pd.concat([combined_df, process_file(file_path)], ignore_index=True)\n\nprint(\"DVW files read: \" + str(len(combined_df['match_id'].unique())))\n\nprint(combined_df[(combined_df['skill'].notna()) & (combined_df['skill'] != \"Point\")].head(10))\n```\n\n## Saving the dataframe as a csv\n\nIf you'd like to save your data into a csv.\n\n```{python}\n#combined_df.to_csv('combined_data.csv') # Where your current directory lives\n```\n\nHowever, this method may present issues when it comes to encoding. You may want to choose some alternate methods when encoding becomes an issue. Saving to excel is one option.\n\n```{python}\n# You may need to run pip install openpyxl before saving to excel\n#combined_df.to_excel('combined_data.xlsx')\n```"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"jupyter"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"show","code-overflow":"scroll","code-link":true,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"output-file":"reading_files.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.433","editor":"visual","theme":["zephyr"],"callout-appearance":"simple","author-meta":"Tyler Widdison","title":"Reading dvw files"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}