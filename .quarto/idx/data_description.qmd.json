{"title":"Data Description Example","markdown":{"yaml":{"title":"Data Description Example"},"headingText":"Scrittura dei dati in un file locale","containsRefs":false,"markdown":"\n\nGather data:\n\n```{python}\nfrom datavolley import read_dv\nimport pandas as pd\nimport urllib.request\ndatavolleyfile=\"&stuttgart-schwerin-2018.dvw\"\nurl_source_file = \"https://raw.githubusercontent.com/openvolley/ovva/master/inst/extdata/demo/%26stuttgart-schwerin-2018.dvw\"\nsource = urllib.request.urlopen(url_source_file).read().decode('UTF-8')\nwith open(datavolleyfile, 'w') as file:\n    file.write(source)\n```\n\nRead data:\n\n```{python}\n# change this if you have your file\ndatavolleyfile=\"&stuttgart-schwerin-2018.dvw\"\n# Reading the file\ndvf = read_dv.DataVolley(datavolleyfile)\n# extract all the actions\nplays = dvf.get_plays()\n```\n\nEvaluate match data:\n\n```{python}\nchampionship = dvf.match_info.championship.values[0]\nprint(championship)\nmatch_day = dvf.match_info.day.values[0]\nprint(match_day)\nmatch_time = dvf.match_info.time.values[0]\nprint(match_time)\nmatch_season = dvf.match_info.season.values[0]\nprint(match_season)\n```\n\n```{python}\ntotal_minutes = dvf.sets_info.duration.sum()\nprint(total_minutes)\nhours = total_minutes // 60\nprint(hours)\nminutes = total_minutes % 60\nprint(minutes)\n```\n\n```{python}\nstring_sets = \"\"\nduraton_sets = \"\"\nfor idx, row in dvf.sets_info.iterrows():\n   string_sets += \"(\" + str(row[\"home4\"]) + \"-\" + str(row[\"visitor4\"]) + \") \"\n   duraton_sets += str(row[\"duration\"]) + \"',\"\nduration_sets = duraton_sets.rstrip(\",\")\nprint(string_sets)\nprint(duration_sets)\n```\n\nPutting it all together:\n\n```{python}\nprint(\"\"\"\n%s - %s\n%s\n%s - %s \n%s-%s %s\nduration: %s:%sh (%s)\n\"\"\" % (match_day, match_time, championship, dvf.home_team, \n       dvf.visiting_team, dvf.home_setswon, dvf.visiting_setswon,\n       string_sets,str(hours).zfill(2), str(minutes).zfill(2), duration_sets))\n```\n\n```{python}\nprint(dvf.home_team)\nprint(\"name\\tname\")\nplayers = dvf.players_home\nplayers['player_number'] = pd.to_numeric(players['player_number'], errors='coerce')\nplayers = players.sort_values(\"player_number\")\nplays = dvf.get_plays()\nfor idx, row in players.iterrows():\n    player_number = row[\"player_number\"]\n    player_name = row['player_name'].rstrip()\n    player_id = row['player_id']\n    points = plays[(plays.player_id == player_id) & plays.skill.isin(['Attack', 'Serve','Block']) & (plays.evaluation_code == \"#\")].shape[0]\n    errors = plays[(plays.player_id == player_id) & plays.skill.isin(['Attack', 'Reception','Dig','Set','Block']) & (plays.evaluation_code == \"=\")].shape[0]\n    print(\"\"\"%s\\t%s (%i,%i)\"\"\" % (player_number,player_name, points, errors))\nprint(\"coaches\")\nprint(\" \" + dvf.home_coaches[0])\nprint(\" \" + dvf.home_coaches[1])\nprint(\"\\nin parentheses: number of points, number of errors\")\n```\n\nPrint home coaches:\n\n```{python}\nprint(dvf.home_coaches[0])\n```\n\n```{python}\nprint(dvf.visiting_team)\nprint(\"name\\tname\")\nplayers = dvf.players_visiting\nplayers['player_number'] = pd.to_numeric(players['player_number'], errors='coerce')\nplayers = players.sort_values(\"player_number\")\nplays = dvf.get_plays()\nfor idx, row in players.iterrows():\n    player_number = row[\"player_number\"]\n    player_name = row['player_name'].rstrip()\n    player_id = row['player_id']\n    points = plays[(plays.player_id == player_id) & plays.skill.isin(['Attack', 'Serve','Block']) & (plays.evaluation_code == \"#\")].shape[0]\n    errors = plays[(plays.player_id == player_id) & plays.skill.isin(['Attack', 'Reception','Dig','Set','Block']) & (plays.evaluation_code == \"=\")].shape[0]\n    print(\"\"\"%s\\t%s (%i,%i)\"\"\" % (player_number,player_name, points, errors))\nprint(\"coaches\")\nprint(\" \" + dvf.visiting_coaches[0])\nprint(\" \" + dvf.visiting_coaches[1])\nprint(\"\\nin parentheses: number of points, number of errors\")\n```","srcMarkdownNoYaml":"\n\nGather data:\n\n```{python}\nfrom datavolley import read_dv\nimport pandas as pd\nimport urllib.request\ndatavolleyfile=\"&stuttgart-schwerin-2018.dvw\"\nurl_source_file = \"https://raw.githubusercontent.com/openvolley/ovva/master/inst/extdata/demo/%26stuttgart-schwerin-2018.dvw\"\nsource = urllib.request.urlopen(url_source_file).read().decode('UTF-8')\n# Scrittura dei dati in un file locale\nwith open(datavolleyfile, 'w') as file:\n    file.write(source)\n```\n\nRead data:\n\n```{python}\n# change this if you have your file\ndatavolleyfile=\"&stuttgart-schwerin-2018.dvw\"\n# Reading the file\ndvf = read_dv.DataVolley(datavolleyfile)\n# extract all the actions\nplays = dvf.get_plays()\n```\n\nEvaluate match data:\n\n```{python}\nchampionship = dvf.match_info.championship.values[0]\nprint(championship)\nmatch_day = dvf.match_info.day.values[0]\nprint(match_day)\nmatch_time = dvf.match_info.time.values[0]\nprint(match_time)\nmatch_season = dvf.match_info.season.values[0]\nprint(match_season)\n```\n\n```{python}\ntotal_minutes = dvf.sets_info.duration.sum()\nprint(total_minutes)\nhours = total_minutes // 60\nprint(hours)\nminutes = total_minutes % 60\nprint(minutes)\n```\n\n```{python}\nstring_sets = \"\"\nduraton_sets = \"\"\nfor idx, row in dvf.sets_info.iterrows():\n   string_sets += \"(\" + str(row[\"home4\"]) + \"-\" + str(row[\"visitor4\"]) + \") \"\n   duraton_sets += str(row[\"duration\"]) + \"',\"\nduration_sets = duraton_sets.rstrip(\",\")\nprint(string_sets)\nprint(duration_sets)\n```\n\nPutting it all together:\n\n```{python}\nprint(\"\"\"\n%s - %s\n%s\n%s - %s \n%s-%s %s\nduration: %s:%sh (%s)\n\"\"\" % (match_day, match_time, championship, dvf.home_team, \n       dvf.visiting_team, dvf.home_setswon, dvf.visiting_setswon,\n       string_sets,str(hours).zfill(2), str(minutes).zfill(2), duration_sets))\n```\n\n```{python}\nprint(dvf.home_team)\nprint(\"name\\tname\")\nplayers = dvf.players_home\nplayers['player_number'] = pd.to_numeric(players['player_number'], errors='coerce')\nplayers = players.sort_values(\"player_number\")\nplays = dvf.get_plays()\nfor idx, row in players.iterrows():\n    player_number = row[\"player_number\"]\n    player_name = row['player_name'].rstrip()\n    player_id = row['player_id']\n    points = plays[(plays.player_id == player_id) & plays.skill.isin(['Attack', 'Serve','Block']) & (plays.evaluation_code == \"#\")].shape[0]\n    errors = plays[(plays.player_id == player_id) & plays.skill.isin(['Attack', 'Reception','Dig','Set','Block']) & (plays.evaluation_code == \"=\")].shape[0]\n    print(\"\"\"%s\\t%s (%i,%i)\"\"\" % (player_number,player_name, points, errors))\nprint(\"coaches\")\nprint(\" \" + dvf.home_coaches[0])\nprint(\" \" + dvf.home_coaches[1])\nprint(\"\\nin parentheses: number of points, number of errors\")\n```\n\nPrint home coaches:\n\n```{python}\nprint(dvf.home_coaches[0])\n```\n\n```{python}\nprint(dvf.visiting_team)\nprint(\"name\\tname\")\nplayers = dvf.players_visiting\nplayers['player_number'] = pd.to_numeric(players['player_number'], errors='coerce')\nplayers = players.sort_values(\"player_number\")\nplays = dvf.get_plays()\nfor idx, row in players.iterrows():\n    player_number = row[\"player_number\"]\n    player_name = row['player_name'].rstrip()\n    player_id = row['player_id']\n    points = plays[(plays.player_id == player_id) & plays.skill.isin(['Attack', 'Serve','Block']) & (plays.evaluation_code == \"#\")].shape[0]\n    errors = plays[(plays.player_id == player_id) & plays.skill.isin(['Attack', 'Reception','Dig','Set','Block']) & (plays.evaluation_code == \"=\")].shape[0]\n    print(\"\"\"%s\\t%s (%i,%i)\"\"\" % (player_number,player_name, points, errors))\nprint(\"coaches\")\nprint(\" \" + dvf.visiting_coaches[0])\nprint(\" \" + dvf.visiting_coaches[1])\nprint(\"\\nin parentheses: number of points, number of errors\")\n```"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"jupyter"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"show","code-overflow":"scroll","code-link":true,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"output-file":"data_description.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.433","editor":"visual","theme":["zephyr"],"callout-appearance":"simple","author-meta":"Tyler Widdison","title":"Data Description Example"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}